{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useRoute } from \"./router\";\nimport * as Font from \"expo-font\";\nimport AppLoading from 'expo-app-loading';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar loadFonts = function loadFonts() {\n  return _regeneratorRuntime.async(function loadFonts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Font.loadAsync({\n            \"Roboto-Regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\n            \"Roboto-Bold\": require(\"./assets/fonts/Roboto-Bold.ttf\")\n          }));\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isReady = _useState2[0],\n    setIsReady = _useState2[1];\n  var routing = useRoute({});\n  if (!isReady) {\n    return _jsx(AppLoading, {\n      startAsync: loadFonts,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: console.warn\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: routing\n  });\n}","map":{"version":3,"names":["React","useState","NavigationContainer","useRoute","Font","AppLoading","loadFonts","loadAsync","require","App","isReady","setIsReady","routing","console","warn"],"sources":["C:/Users/vlad1/Documents/GitHub/react-native-proj/App.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {} from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport {useRoute} from './router';\r\nimport * as Font from \"expo-font\";\r\nimport AppLoading from 'expo-app-loading';\r\n\r\nconst loadFonts = async () => {\r\n  await Font.loadAsync({\r\n    \"Roboto-Regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\r\n    \"Roboto-Bold\": require(\"./assets/fonts/Roboto-Bold.ttf\"),\r\n  });\r\n};\r\n\r\nexport default function App() {\r\n  const [isReady, setIsReady] = useState(false);\r\n  const routing = useRoute({});\r\n\r\n  if (!isReady) {\r\n    return <AppLoading startAsync={loadFonts}\r\n      onFinish={() =>\r\n      setIsReady(true)}\r\n      onError={console.warn}\r\n    />\r\n  }\r\n  return (\r\n    <NavigationContainer>\r\n      {routing}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAe,cAAc;AAC7B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAAQC,QAAQ;AAChB,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,UAAU,MAAM,kBAAkB;AAAC;AAE1C,IAAMC,SAAS,GAAG,SAAZA,SAAS;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACPF,IAAI,CAACG,SAAS,CAAC;YACnB,gBAAgB,EAAEC,OAAO,qCAAqC;YAC9D,aAAa,EAAEA,OAAO;UACxB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CACH;AAED,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAA8BR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCS,OAAO;IAAEC,UAAU;EAC1B,IAAMC,OAAO,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5B,IAAI,CAACO,OAAO,EAAE;IACZ,OAAO,KAAC,UAAU;MAAC,UAAU,EAAEJ,SAAU;MACvC,QAAQ,EAAE;QAAA,OACVK,UAAU,CAAC,IAAI,CAAC;MAAA,CAAC;MACjB,OAAO,EAAEE,OAAO,CAACC;IAAK,EACtB;EACJ;EACA,OACE,KAAC,mBAAmB;IAAA,UACjBF;EAAO,EACY;AAE1B"},"metadata":{},"sourceType":"module"}